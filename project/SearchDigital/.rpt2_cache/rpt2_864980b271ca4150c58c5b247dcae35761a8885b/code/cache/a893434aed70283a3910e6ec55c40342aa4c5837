{
  "code": "export default class GameControl extends Laya.Script {\r\n    constructor() { super(); }\r\n    onEnable() {\r\n        this.initGameScene();\r\n        this.replacementCard();\r\n    }\r\n    initGameScene() {\r\n        this.self = this.owner;\r\n        this.self['Gamecontrol'] = this;\r\n        this.levels = 5;\r\n        this.timer = 0;\r\n        this.timeNum.value = '10s';\r\n    }\r\n    replacementCard() {\r\n        this.indicateNumReset();\r\n        this.cardCollection();\r\n    }\r\n    cardCollection() {\r\n        let spacingY = 10;\r\n        let spacingX = 10;\r\n        let cardCount = this.levels * 2;\r\n        let startX1 = this.cardParent.width / 4;\r\n        let startX2 = this.cardParent.width * 3 / 4;\r\n        let startY = this.cardParent.height / 2;\r\n        let noChengeI = Math.floor(Math.random() * 2);\r\n        let noChengeJ = Math.floor(Math.random() * this.levels + 1);\r\n        for (let i = 0; i < 2; i++) {\r\n            for (let j = 1; j < this.levels + 1; j++) {\r\n                let card;\r\n                if (i === noChengeI && j === noChengeJ) {\r\n                    card = this.createCard('nochange');\r\n                }\r\n                else {\r\n                    card = this.createCard('change');\r\n                }\r\n                if (i % 2 === 0) {\r\n                    card.x = startX1;\r\n                }\r\n                else {\r\n                    card.x = startX2;\r\n                }\r\n                if (j % 2 === 0) {\r\n                    card.y = startY + (j / 2) * (card.height + spacingY);\r\n                }\r\n                else {\r\n                    card.y = startY - (j - 1) / 2 * (card.height + spacingY);\r\n                }\r\n            }\r\n        }\r\n        this.levels++;\r\n    }\r\n    indicateNumReset() {\r\n        this.levels;\r\n        let num1 = Math.floor(Math.random() * 9) + 1;\r\n        let overlen = this.levels - 1;\r\n        let num = num1.toString();\r\n        for (let i = 0; i < overlen; i++) {\r\n            num += Math.floor(Math.random() * 10).toString();\r\n        }\r\n        let scale = 1 - (this.levels - 8) * 0.05;\r\n        this.indicateNum.scale(scale, scale);\r\n        this.indicateNum.value = num;\r\n        this.changeAnumber();\r\n    }\r\n    changeAnumber() {\r\n        let arr = [];\r\n        for (let i = 0; i < this.indicateNum.value.length; i++) {\r\n            arr.push(this.indicateNum.value[i]);\r\n        }\r\n        let random = Math.floor(Math.random() * (arr.length - 1)) + 1;\r\n        let originalNum = arr[random];\r\n        let randomNum = Math.floor(Math.random() * 10).toString();\r\n        while (originalNum === randomNum) {\r\n            randomNum = Math.floor(Math.random() * 10).toString();\r\n        }\r\n        arr[random] = randomNum;\r\n        let numString;\r\n        for (let j = 0; j < arr.length; j++) {\r\n            if (j === 0) {\r\n                numString = arr[j];\r\n            }\r\n            else {\r\n                numString += arr[j];\r\n            }\r\n        }\r\n        return numString;\r\n    }\r\n    createCard(type) {\r\n        let card = Laya.Pool.getItemByCreateFun('speakBox', this.digitalCard.create, this.digitalCard);\r\n        this.cardParent.addChild(card);\r\n        if (type === 'change') {\r\n            card['DigitalCard'].number.value = this.changeAnumber();\r\n        }\r\n        else {\r\n            card['DigitalCard'].number.value = this.indicateNum.value;\r\n        }\r\n        card['DigitalCard'].numAdaptiveBoard();\r\n        return card;\r\n    }\r\n    clearAllCard() {\r\n        let len = this.cardParent._children.length;\r\n        let delayed = 0;\r\n        for (let i = 0; i < len; i++) {\r\n            let card = this.cardParent._children[i];\r\n            delayed += 100;\r\n            Laya.timer.once(delayed, this, function () {\r\n                card.alpha = 0;\r\n                if (i === len - 1) {\r\n                    this.cardParent.removeChildren(0, len - 1);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onUpdate() {\r\n        this.timer++;\r\n        if (this.timer % 60 == 0) {\r\n            let timeNum = this.timeNum.value;\r\n            let subNum;\r\n            if (timeNum.length === 3) {\r\n                subNum = timeNum.substring(0, 2);\r\n            }\r\n            else if (timeNum.length === 2) {\r\n                subNum = timeNum.substring(0, 1);\r\n            }\r\n            if (subNum === '0') {\r\n                return;\r\n            }\r\n            this.timeNum.value = (Number(subNum) - 1).toString() + 's';\r\n        }\r\n    }\r\n    onDisable() {\r\n    }\r\n}\r\n",
  "references": []
}
