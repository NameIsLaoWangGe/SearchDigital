{
  "code": "export default class DigitalCard extends Laya.Script {\r\n    constructor() { super(); }\r\n    onEnable() {\r\n        this.self = this.owner;\r\n        this.self['DigitalCard'] = this;\r\n        this.gameControl = this.self.scene['Gamecontrol'];\r\n        this.cardClicksOn();\r\n    }\r\n    numAdaptiveBoard() {\r\n        let len = this.number.value.length;\r\n        if (len <= 3) {\r\n            this.board.width = len * 40 + 80;\r\n        }\r\n        else if (len >= 3 && len <= 6) {\r\n            this.board.width = len * 40 + 50;\r\n        }\r\n        this.board.height = 135 - (len - 1) * 6;\r\n        let scale = 1 - (len - 1) * 0.05;\r\n        this.number.scale(scale, scale);\r\n        this.self.height = this.board.height;\r\n        this.self.pivotY = this.self.height / 2;\r\n        this.board.x = this.self.pivotX;\r\n        this.board.y = this.self.pivotY;\r\n        this.number.x = this.self.pivotX;\r\n        this.number.y = this.self.pivotY * 1.1;\r\n        this.board.pivotX = this.board.width / 2;\r\n        this.board.pivotY = this.board.height / 2;\r\n        this.board.x = this.number.x;\r\n    }\r\n    cardClicksOn() {\r\n        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);\r\n        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);\r\n        this.self.on(Laya.Event.MOUSE_UP, this, this.up);\r\n        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);\r\n    }\r\n    cardClicksOnOff() {\r\n        this.self.off(Laya.Event.MOUSE_DOWN, this, this.down);\r\n        this.self.off(Laya.Event.MOUSE_MOVE, this, this.move);\r\n        this.self.off(Laya.Event.MOUSE_UP, this, this.up);\r\n        this.self.off(Laya.Event.MOUSE_OUT, this, this.out);\r\n    }\r\n    down(event) {\r\n        event.currentTarget.scale(0.9, 0.9);\r\n    }\r\n    cardVanish() {\r\n        Laya.Tween.to(this.self, { scaleX: 0, scaleY: 0, alpha: 0 }, 200, Laya.Ease.expoIn, Laya.Handler.create(this, function () {\r\n            this.self.removeSelf();\r\n        }));\r\n    }\r\n    move(event) {\r\n        event.currentTarget.scale(1, 1);\r\n    }\r\n    up(event) {\r\n        event.currentTarget.scale(1, 1);\r\n        let indicateNum = this.gameControl.indicateNum;\r\n        if (this.number.value === indicateNum.value) {\r\n            this.cardClicksOnOff();\r\n            this.cardVanish();\r\n        }\r\n    }\r\n    out(event) {\r\n        event.currentTarget.scale(1, 1);\r\n    }\r\n    onDisable() {\r\n    }\r\n}\r\n",
  "references": []
}
