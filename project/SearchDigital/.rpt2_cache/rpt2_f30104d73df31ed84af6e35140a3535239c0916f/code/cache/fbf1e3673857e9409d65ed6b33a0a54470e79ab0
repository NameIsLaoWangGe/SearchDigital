{
  "code": "import { Animation } from \"./Template/Animation\";\r\nimport { Clicks } from \"./Template/Clicks\";\r\nimport { PalyAudio } from \"./Template/PlayAudio\";\r\nexport default class GameOver extends Laya.Script {\r\n    constructor() { super(); }\r\n    onEnable() {\r\n        this.self = this.owner;\r\n        this.self['GameOVer'] = this;\r\n        this.gameControl = this.self.scene['Gamecontrol'];\r\n        this.levelsNode = this.gameControl.levelsNode;\r\n        this.indicateCard = this.gameControl.indicateCard;\r\n        this.timeCard = this.gameControl.timeCard;\r\n        this.line = this.gameControl.line;\r\n        this.logoSwitch = false;\r\n        this.logoChange = 'appear';\r\n        this.gameControl.adaptiveOther(this.self);\r\n        this.appaer();\r\n        this.gameControl.wxPostData();\r\n        PalyAudio.gameOver(1);\r\n    }\r\n    appaer() {\r\n        let firstY = 1800;\r\n        let time = 800;\r\n        let delayed = 150;\r\n        PalyAudio.aAingleCard(3);\r\n        Animation.go_up(this.logo, firstY, Math.floor(Math.random() * 2) === 1 ? 45 : -45, 644, time, 0, null);\r\n        Animation.go_up(this.btn_again, firstY, Math.floor(Math.random() * 2) === 1 ? 45 : -45, 790, time, delayed, null);\r\n        Animation.go_up(this.btn_return, firstY, Math.floor(Math.random() * 2) === 1 ? 45 : -45, 790, time, delayed * 2, func => { this.levelsCardAni(); });\r\n    }\r\n    levelsCardAni() {\r\n        let time = 200;\r\n        let targetX = Laya.stage.width / 2;\r\n        let targetY = this.logo.y + (this.self.y - this.self.height / 2) - 150;\r\n        Animation.move_changeRotate(this.levelsNode, targetX, targetY, 0.5, 45, time, func => this.logoSwitch = true);\r\n        Animation.cardRotateX_TowFace(this.levelsNode, ['levelsNum'], func => PalyAudio.cardRotate(2), 100, 0, null);\r\n        Animation.fade_out(this.indicateCard, 1, 0, time * 2, 60, func => this.clicksOnBtn());\r\n        Animation.fade_out(this.timeCard, 1, 0, time * 2, 30, null);\r\n        Animation.fade_out(this.line, 1, 0, time * 2, 0, null);\r\n    }\r\n    nodeDisplay(type) {\r\n        let time = 250;\r\n        let targetX = 108;\r\n        let targetY = this.indicateCard.y;\r\n        Animation.move_changeRotate(this.levelsNode, targetX, targetY, 0.5, -45, time, null);\r\n        Animation.cardRotateX_TowFace(this.levelsNode, ['levelsNum'], func => PalyAudio.cardRotate(2), 100, 0, null);\r\n        Animation.fade_out(this.indicateCard, 0, 1, time * 2, 100, null);\r\n        Animation.fade_out(this.timeCard, 0, 1, time * 2, 200, null);\r\n        Animation.fade_out(this.line, 0, 1, time * 2, 500, func => this.nodeDisplayFunc(type));\r\n    }\r\n    nodeDisplayFunc(type) {\r\n        if (type === 'again') {\r\n            this.gameControl.replacementCard('reStart');\r\n        }\r\n        else if (type === 'return') {\r\n            this.gameControl.createStartGame();\r\n            this.gameControl.otherVanish();\r\n        }\r\n    }\r\n    vanish(type) {\r\n        let time = 800;\r\n        let targetY = 1800;\r\n        let delayed = 150;\r\n        Animation.drop(this.btn_again, targetY, Math.floor(Math.random() * 2) === 1 ? 30 : -30, time, delayed * 0, null);\r\n        Animation.drop(this.btn_return, targetY, Math.floor(Math.random() * 2) === 1 ? 30 : -30, time, delayed * 1, null);\r\n        Animation.drop(this.logo, targetY, Math.floor(Math.random() * 2) === 1 ? 30 : -30, time, delayed * 2, func => this.vanishFunc(type));\r\n    }\r\n    vanishFunc(type) {\r\n        if (Laya.Browser.onMiniGame) {\r\n            this.gameControl.bannerAd.hide();\r\n        }\r\n        this.self.removeSelf();\r\n        this.nodeDisplay(type);\r\n    }\r\n    clicksOnBtn() {\r\n        Clicks.clicksOn('largen', this.btn_again, this, null, null, this.up, null);\r\n        Clicks.clicksOn('largen', this.btn_return, this, null, null, this.up, null);\r\n    }\r\n    clicksOffBtn() {\r\n        Clicks.clicksOff('largen', this.btn_again, this, null, null, this.up, null);\r\n        Clicks.clicksOff('largen', this.btn_return, this, null, null, this.up, null);\r\n    }\r\n    up(event) {\r\n        event.currentTarget.scale(1, 1);\r\n        this.clicksOffBtn();\r\n        if (event.currentTarget.name === 'btn_again') {\r\n            this.vanish('again');\r\n        }\r\n        else if (event.currentTarget.name === 'btn_return') {\r\n            this.vanish('return');\r\n        }\r\n    }\r\n    onUpdate() {\r\n        if (this.logoSwitch) {\r\n            if (this.logoChange === 'appear') {\r\n                this.logo.alpha -= 0.01;\r\n                if (this.logo.alpha < 0.3) {\r\n                    this.logoChange = 'vanish';\r\n                }\r\n            }\r\n            else if (this.logoChange === 'vanish') {\r\n                this.logo.alpha += 0.01;\r\n                if (this.logo.alpha >= 1) {\r\n                    this.logoChange = 'appear';\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onDisable() {\r\n    }\r\n}\r\n",
  "references": [
    "F:/Work/Game/SearchDigital/project/SearchDigital/src/Script/Template/Animation.ts",
    "F:/Work/Game/SearchDigital/project/SearchDigital/src/Script/Template/Clicks.ts",
    "F:/Work/Game/SearchDigital/project/SearchDigital/src/Script/Template/PlayAudio.ts"
  ]
}
