{
  "code": "import { NodeAni } from \"./Frame/NodeAni\";\r\nimport { ButtonClicks } from \"./Frame/ButtonClicks\";\r\nexport default class DigitalCard extends Laya.Script {\r\n    constructor() { super(); }\r\n    onEnable() {\r\n        this.self = this.owner;\r\n        this.self['DigitalCard'] = this;\r\n        this.gameControl = this.self.scene['Gamecontrol'];\r\n        this.cardParent = this.gameControl.cardParent;\r\n        this.indicateCard = this.gameControl.indicateCard;\r\n        this.levels = this.gameControl.levels;\r\n        let scale = 1 - (this.levels - 1) * 0.04;\r\n        this.number.scale(scale, scale);\r\n        this.board.skin = 'UI/数字底板.png';\r\n        this.sign = false;\r\n    }\r\n    cardVanish(type) {\r\n        clearAllCard_Next => this.gameControl.clearAllCard_Next();\r\n        if (type === 'right') {\r\n            NodeAni.rightAni(this.indicateCard, 50, 10, null);\r\n            NodeAni.rightAni(this.self, 50, 10, func => this.gameControl.clearAllCard_Next());\r\n        }\r\n        else if (type === 'error') {\r\n            NodeAni.errorAni(this.indicateCard, 50, 10, null);\r\n            NodeAni.errorAni(this.self, 50, 10, func => this.gameControl.clearAllCard_Over());\r\n        }\r\n    }\r\n    cardClicksOn() {\r\n        ButtonClicks.cardClicksOn(this.self, this, this.down, null, this.up, null);\r\n    }\r\n    cardClicksOff() {\r\n        ButtonClicks.cardClicksOff(this.self, this, this.down, null, this.up, null);\r\n    }\r\n    down(event) {\r\n        event.currentTarget.scale(1.1, 1.1);\r\n        let indicateNum = this.gameControl.indicateNum;\r\n        if (this.number.value === indicateNum.value) {\r\n            this.board.skin = 'UI/正确底板.png';\r\n        }\r\n        else {\r\n            this.board.skin = 'UI/错误底板.png';\r\n        }\r\n    }\r\n    up(event) {\r\n        this.gameControl.timerSwitch = false;\r\n        this.cardClicksOff();\r\n        event.currentTarget.scale(1, 1);\r\n        let indicateNum = this.gameControl.indicateNum;\r\n        if (this.number.value === indicateNum.value) {\r\n            this.cardVanish('right');\r\n        }\r\n        else {\r\n            this.cardVanish('error');\r\n        }\r\n    }\r\n    onDisable() {\r\n    }\r\n}\r\n",
  "references": [
    "F:/Work/Game/SearchDigital/project/SearchDigital/src/Script/GameControl.ts",
    "F:/Work/Game/SearchDigital/project/SearchDigital/src/Script/Frame/NodeAni.ts",
    "F:/Work/Game/SearchDigital/project/SearchDigital/src/Script/Frame/ButtonClicks.ts"
  ]
}
