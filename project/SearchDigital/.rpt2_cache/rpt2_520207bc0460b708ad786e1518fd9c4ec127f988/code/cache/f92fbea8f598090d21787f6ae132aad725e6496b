{
  "code": "export default class GameControl extends Laya.Script {\r\n    constructor() { super(); }\r\n    onEnable() {\r\n        this.initGameScene();\r\n        this.replacementCard();\r\n    }\r\n    initGameScene() {\r\n        this.self = this.owner;\r\n        this.self['Gamecontrol'] = this;\r\n        this.self.height = Laya.stage.height;\r\n        this.levels = 0;\r\n        this.levelsNum.value = this.levels.toString();\r\n        this.timer = 0;\r\n        this.timeNum.value = '10s';\r\n        this.timerSwitch = false;\r\n    }\r\n    adaptiveRule() {\r\n        this.background.height = Laya.stage.height;\r\n        let line = this.self.getChildByName('line');\r\n        line.y = Laya.stage.height * 0.19;\r\n        this.levelsNode.y = 0.12;\r\n        this.indicateCard.y = 0.12;\r\n        this.timeCard.y = 0.12;\r\n        this.cardParent.y = 0.22;\r\n    }\r\n    replacementCard() {\r\n        this.levels++;\r\n        this.levelsNodeAni();\r\n        this.timeNum.value = '3s';\r\n    }\r\n    levelsNodeAni() {\r\n        let time = 120;\r\n        Laya.Tween.to(this.levelsNode, { scaleX: 0 }, time, null, Laya.Handler.create(this, function () {\r\n            this.levelsNum.alpha = 0;\r\n            Laya.Tween.to(this.levelsNode, { scaleX: 1 }, time, null, Laya.Handler.create(this, function () {\r\n                Laya.Tween.to(this.levelsNode, { scaleX: 0 }, time, null, Laya.Handler.create(this, function () {\r\n                    Laya.Tween.to(this.levelsNode, { scaleX: 1 }, time - 50, null, Laya.Handler.create(this, function () {\r\n                        this.levelsNum.alpha = 1;\r\n                        this.levelsNum.value = this.levels.toString();\r\n                        this.indicateNodeAin();\r\n                    }), 0);\r\n                }), 0);\r\n            }), 0);\r\n        }), 0);\r\n    }\r\n    cardCollection() {\r\n        let spacingY = 5;\r\n        let startX1 = this.cardParent.width / 4;\r\n        let startX2 = this.cardParent.width * 3 / 4;\r\n        let len = 14;\r\n        let noChengeJ = Math.floor(Math.random() * len);\r\n        let delayed = 10;\r\n        for (let j = 0; j < len; j++) {\r\n            delayed += 50;\r\n            let card;\r\n            if (j === noChengeJ) {\r\n                card = this.createCard('nochange');\r\n            }\r\n            else {\r\n                card = this.createCard('change');\r\n            }\r\n            card.y = 1500;\r\n            let tagetY;\r\n            if (j % 2 === 0) {\r\n                card.x = startX1;\r\n                tagetY = j / 2 * (card.height + spacingY) + 80;\r\n            }\r\n            else {\r\n                card.x = startX2;\r\n                tagetY = (j - 1) / 2 * (card.height + spacingY) + 80;\r\n            }\r\n            card.rotation = Math.floor(Math.random() * 2) === 1 ? 30 : -30;\r\n            let time = 500;\r\n            Laya.timer.once(delayed, this, function () {\r\n                Laya.Tween.to(card, { y: tagetY, rotation: 0 }, time, Laya.Ease.circOut, Laya.Handler.create(this, function () {\r\n                    if (j === len - 1) {\r\n                        this.timerSwitch = true;\r\n                        for (let index = 0; index < this.cardParent._children.length; index++) {\r\n                            const card = this.cardParent._children[index];\r\n                            card['DigitalCard'].cardClicksOn();\r\n                        }\r\n                    }\r\n                }));\r\n            });\r\n        }\r\n    }\r\n    clearAllCard(type) {\r\n        let len = this.cardParent._children.length;\r\n        let delayed = 0;\r\n        this.timerSwitch = false;\r\n        for (let i = 0; i < len; i++) {\r\n            let card = this.cardParent._children[i];\r\n            delayed += 50;\r\n            Laya.timer.once(delayed, this, function () {\r\n                let rotate = Math.floor(Math.random() * 2) === 1 ? 30 : -30;\r\n                Laya.Tween.to(card, { y: 1500, alpha: 0, rotation: rotate }, 800, Laya.Ease.expoIn, Laya.Handler.create(this, function () {\r\n                    if (i === len - 1) {\r\n                        this.cardParent.removeChildren(0, len - 1);\r\n                        if (type === 'gameOver') {\r\n                            this.createGameOver();\r\n                        }\r\n                        else if (type === 'nextLevel') {\r\n                            this.replacementCard();\r\n                        }\r\n                    }\r\n                }));\r\n            });\r\n        }\r\n    }\r\n    indicateNodeAin() {\r\n        let time = 120;\r\n        Laya.Tween.to(this.indicateCard, { scaleY: 0 }, time, null, Laya.Handler.create(this, function () {\r\n            this.indicateNum.alpha = 0;\r\n            Laya.Tween.to(this.indicateCard, { scaleY: 1 }, time, null, Laya.Handler.create(this, function () {\r\n                this.indicateNum.alpha = 1;\r\n                this.indicateNumReset();\r\n                this.cardCollection();\r\n            }), 0);\r\n        }), 0);\r\n    }\r\n    indicateNumReset() {\r\n        let num1 = Math.floor(Math.random() * 9) + 1;\r\n        let overlen = this.levels - 1;\r\n        let num = num1.toString();\r\n        for (let i = 0; i < overlen; i++) {\r\n            num += Math.floor(Math.random() * 10).toString();\r\n        }\r\n        let scale = 1 - (this.levels - 2) * 0.04;\r\n        this.indicateNum.scale(scale, scale);\r\n        this.indicateNum.value = num;\r\n        this.changeAnumber();\r\n    }\r\n    changeAnumber() {\r\n        let arr = [];\r\n        for (let i = 0; i < this.indicateNum.value.length; i++) {\r\n            arr.push(this.indicateNum.value[i]);\r\n        }\r\n        let random = Math.floor(Math.random() * (arr.length - 1));\r\n        let originalNum = arr[random];\r\n        let randomNum = Math.floor(Math.random() * 10).toString();\r\n        while (originalNum === randomNum) {\r\n            randomNum = Math.floor(Math.random() * 10).toString();\r\n        }\r\n        arr[random] = randomNum;\r\n        let numString;\r\n        for (let j = 0; j < arr.length; j++) {\r\n            if (j === 0) {\r\n                numString = arr[j];\r\n            }\r\n            else {\r\n                numString += arr[j];\r\n            }\r\n        }\r\n        return numString;\r\n    }\r\n    createCard(type) {\r\n        let card = Laya.Pool.getItemByCreateFun('speakBox', this.digitalCard.create, this.digitalCard);\r\n        this.cardParent.addChild(card);\r\n        if (type === 'change') {\r\n            card['DigitalCard'].number.value = this.changeAnumber();\r\n        }\r\n        else {\r\n            card['DigitalCard'].number.value = this.indicateNum.value;\r\n        }\r\n        return card;\r\n    }\r\n    createGameOver() {\r\n        let gameOVer = Laya.Pool.getItemByCreateFun('speakBox', this.gameOVer.create, this.gameOVer);\r\n        this.self.addChild(gameOVer);\r\n    }\r\n    onUpdate() {\r\n        if (this.timerSwitch) {\r\n            this.timer++;\r\n            if (this.timer % 60 == 0) {\r\n                let timeNum = this.timeNum.value;\r\n                let subNum;\r\n                if (timeNum.length === 3) {\r\n                    subNum = timeNum.substring(0, 2);\r\n                }\r\n                else if (timeNum.length === 2) {\r\n                    subNum = timeNum.substring(0, 1);\r\n                }\r\n                if (subNum === '0') {\r\n                    this.timerSwitch = false;\r\n                    this.clearAllCard('gameOver');\r\n                }\r\n                this.timeNum.value = (Number(subNum) - 1).toString() + 's';\r\n            }\r\n        }\r\n    }\r\n    onDisable() {\r\n    }\r\n}\r\n",
  "references": []
}
