{
  "code": "import { Animation } from \"./Template/Animation\";\r\nexport default class GameControl extends Laya.Script {\r\n    constructor() { super(); }\r\n    onEnable() {\r\n        this.initGameScene();\r\n        this.adaptiveRule();\r\n        this.createStartGame();\r\n    }\r\n    initGameScene() {\r\n        this.self = this.owner;\r\n        this.self['Gamecontrol'] = this;\r\n        this.levels = 0;\r\n        this.levelsNum.value = this.levels.toString();\r\n        this.timer = 0;\r\n        this.timeNum.value = '30s';\r\n        this.timerSwitch = false;\r\n        this.videoAdOnClose = false;\r\n        this.videoAdLode();\r\n        this.bannerAdLode();\r\n        this.wxPostInit();\r\n    }\r\n    videoAdLode() {\r\n        if (Laya.Browser.onMiniGame) {\r\n            this.videoAd = wx.createRewardedVideoAd({\r\n                adUnitId: 'adunit-6de18c6de7b6d9ab'\r\n            });\r\n            this.videoAd.onLoad(() => {\r\n                console.log('激励视频 广告加载成功');\r\n            });\r\n            this.videoAd.onError(err => {\r\n                console.log(err);\r\n            });\r\n            this.videoAd.onClose(res => {\r\n                if (res && res.isEnded || res === undefined) {\r\n                    this.startNode['GameOVer'].vanish('adv');\r\n                    if (Laya.Browser.onMiniGame) {\r\n                        this.bannerAd.hide();\r\n                    }\r\n                }\r\n                else {\r\n                    if (Laya.Browser.onMiniGame) {\r\n                        this.bannerAd.show()\r\n                            .then(() => console.log('banner 广告显示'));\r\n                    }\r\n                    console.log('视频没有看望不会开始游戏');\r\n                }\r\n            });\r\n        }\r\n    }\r\n    bannerAdLode() {\r\n        if (Laya.Browser.onMiniGame) {\r\n            this.bannerAd = wx.createBannerAd({\r\n                adUnitId: 'adunit-5329937f4349b0ea',\r\n                adIntervals: 30,\r\n                style: {\r\n                    left: 0,\r\n                    top: 0,\r\n                    width: 750\r\n                }\r\n            });\r\n            this.bannerAd.onLoad(() => {\r\n                console.log('banner 广告加载成功');\r\n            });\r\n            this.bannerAd.onError(err => {\r\n                console.log(err);\r\n            });\r\n            this.bannerAd.show();\r\n        }\r\n    }\r\n    adaptiveRule() {\r\n        let stageHeight = Laya.stage.height;\r\n        this.self.height = stageHeight;\r\n        this.background.height = stageHeight;\r\n        this.background.x = 0;\r\n        this.background.y = 0;\r\n        let location = stageHeight * 0.132;\r\n        this.levelsNode.y = location;\r\n        this.levelsNode.alpha = 0;\r\n        this.indicateCard.y = location;\r\n        this.indicateCard.alpha = 0;\r\n        this.timeCard.y = location;\r\n        this.timeCard.alpha = 0;\r\n        this.cardParent.y = stageHeight * 0.22;\r\n        this.line.y = (this.cardParent.y + this.indicateCard.y + this.indicateCard.height / 2 + 7) / 2;\r\n        this.line.alpha = 0;\r\n        this.cardAndParentAdaptive();\r\n    }\r\n    createStartGame() {\r\n        let startGame = Laya.Pool.getItemByCreateFun('startGame', this.startGame.create, this.startGame);\r\n        this.self.addChild(startGame);\r\n    }\r\n    replacementCard(type) {\r\n        if (type === 'start' || type === 'reStart' || type === 'adv') {\r\n            this.levels = 1;\r\n        }\r\n        else if (type === 'nextLevel') {\r\n            this.levels++;\r\n        }\r\n        this.timer = -50;\r\n        this.otherRotate(type);\r\n    }\r\n    otherRotate(type) {\r\n        let time = 120;\r\n        Animation.cardRotateX_OneFace(this.levelsNode, func => {\r\n            this.levelsNum.value = this.levels.toString();\r\n            this.cardAudio(1);\r\n        }, time, 0, func => {\r\n            Animation.cardRotateY_OneFace(this.indicateCard, func => this.indicateNumReset(), time, 0, func => {\r\n                this.cardAudio(1);\r\n                this.otherRotateFunc(type, time);\r\n            });\r\n        });\r\n    }\r\n    otherRotateFunc(type, time) {\r\n        if (type === 'nextLevel') {\r\n            this.cardCollection();\r\n        }\r\n        else {\r\n            Animation.cardRotateX_OneFace(this.timeCard, func => {\r\n                this.cardAudio(1);\r\n                if (type === 'start' || type === 'reStart') {\r\n                    this.timeNum.value = '30s';\r\n                }\r\n                else if (type === 'adv') {\r\n                    this.timeNum.value = '40s';\r\n                }\r\n            }, time, 0, func => this.cardCollection());\r\n        }\r\n    }\r\n    indicateNumReset() {\r\n        let num1 = Math.floor(Math.random() * 9) + 1;\r\n        let levels = this.levels;\r\n        let overlen = levels - 1;\r\n        let num = num1.toString();\r\n        for (let i = 0; i < overlen; i++) {\r\n            num += Math.floor(Math.random() * 10).toString();\r\n        }\r\n        let scale = 1 - (levels - 2) * 0.04;\r\n        this.indicateNum.scale(scale, scale);\r\n        this.indicateNum.value = num;\r\n        this.changeAnumber();\r\n    }\r\n    otherVanish() {\r\n        let time = 200;\r\n        let delayed = 150;\r\n        Animation.fade_out(this.levelsNode, 1, 0, time, delayed * 0, null);\r\n        Animation.fade_out(this.indicateCard, 1, 0, time, delayed * 1, null);\r\n        Animation.fade_out(this.timeCard, 1, 0, time, delayed * 2, null);\r\n        Animation.fade_out(this.line, 1, 0, time, delayed * 3, null);\r\n    }\r\n    otherAppear() {\r\n        let time = 200;\r\n        let delayed = 150;\r\n        Animation.fade_out(this.levelsNode, 0, 1, time, delayed * 0, null);\r\n        Animation.fade_out(this.indicateCard, 0, 1, time, delayed * 1, null);\r\n        Animation.fade_out(this.timeCard, 0, 1, time, delayed * 2, null);\r\n        Animation.fade_out(this.line, 0, 1, time, delayed * 3, null);\r\n    }\r\n    cardAndParentAdaptive() {\r\n        this.cardSpacingY = 10;\r\n        let remainingW = this.self.height - this.cardParent.y - this.self.height * 0.05;\r\n        let cardSpace = remainingW / 7;\r\n        this.cardHeight = cardSpace - this.cardSpacingY;\r\n    }\r\n    cardCollection() {\r\n        let startX1 = this.cardParent.width / 4;\r\n        let startX2 = this.cardParent.width * 3 / 4;\r\n        let len = 14;\r\n        let noChengeJ = Math.floor(Math.random() * len);\r\n        let delayed = 10;\r\n        let zOrder1 = 100;\r\n        for (let j = len - 1; j >= 0; j--) {\r\n            zOrder1--;\r\n            let card;\r\n            if (j === noChengeJ) {\r\n                card = this.createCard('nochange');\r\n            }\r\n            else {\r\n                card = this.createCard('change');\r\n            }\r\n            card.y = 1500;\r\n            card.zOrder = Math.floor(Math.random() * 30);\r\n            card.height = this.cardHeight;\r\n            card['DigitalCard'].board.height = this.cardHeight;\r\n            card['DigitalCard'].number.y = this.cardHeight / 2;\r\n            let tagetY;\r\n            if (j % 2 === 0) {\r\n                card.x = startX1;\r\n                tagetY = j / 2 * (card.height + this.cardSpacingY) + 80;\r\n            }\r\n            else {\r\n                card.x = startX2;\r\n                tagetY = (j - 1) / 2 * (card.height + this.cardSpacingY) + 80;\r\n            }\r\n            if (j === 0) {\r\n                this.goUpAudio();\r\n            }\r\n            Animation.go_up(card, 1800, Math.floor(Math.random() * 2) === 1 ? 30 : -30, tagetY, 500, delayed, func => {\r\n                if (j === len - 1) {\r\n                    this.timerSwitch = true;\r\n                    for (let index = 0; index < this.cardParent._children.length; index++) {\r\n                        const card = this.cardParent._children[index];\r\n                        card['DigitalCard'].cardClicksOn();\r\n                    }\r\n                }\r\n            });\r\n            delayed += 50;\r\n        }\r\n    }\r\n    clearAllCard_Next() {\r\n        this.clearAllClicks();\r\n        let len = this.cardParent._children.length;\r\n        this.timerSwitch = false;\r\n        for (let i = 0; i < len; i++) {\r\n            let card = this.cardParent._children[i];\r\n            Laya.timer.once(i * 50, this, function () {\r\n                Animation.drop(card, 1800, Math.floor(Math.random() * 2) === 1 ? 30 : -30, 800, 0, func => {\r\n                    if (i === 1) {\r\n                        this.dropAudio();\r\n                    }\r\n                    if (i === len - 1) {\r\n                        this.cardParent.removeChildren(0, len - 1);\r\n                        this.replacementCard('nextLevel');\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n    clearAllCard_Over() {\r\n        this.clearAllClicks();\r\n        let len = this.cardParent._children.length;\r\n        this.timerSwitch = false;\r\n        for (let i = 0; i < len; i++) {\r\n            let card = this.cardParent._children[i];\r\n            Laya.timer.once(i * 50, this, func => {\r\n                if (i === 1) {\r\n                    this.dropAudio();\r\n                }\r\n                if (card['DigitalCard'].number.value === this.indicateNum.value) {\r\n                    card.zOrder = 1000;\r\n                    this.cardRotating(card, i);\r\n                }\r\n                else {\r\n                    Animation.drop(card, 1800, Math.floor(Math.random() * 2) === 1 ? 30 : -30, 800, 0, null);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    cardRotating(card, i) {\r\n        let len = this.cardParent._children.length;\r\n        let time = 120;\r\n        Animation.cardRotateY_TowFace(card, ['number'], func => this.cardAudio(2), 120, (len - i) * 50 + 500, func => {\r\n            Animation.drop(card, 1800, Math.floor(Math.random() * 2) === 1 ? 30 : -30, 1000, 500, func => {\r\n                this.cardParent.removeChildren(0, len - 1);\r\n                this.createGameOver();\r\n            });\r\n        });\r\n    }\r\n    cardAudio(number) {\r\n        Laya.SoundManager.playSound('音效/单张牌旋转.mp3', number, Laya.Handler.create(this, function () { }));\r\n    }\r\n    dropAudio() {\r\n        Laya.SoundManager.playSound('音效/全体下落.mp3', 1, Laya.Handler.create(this, function () { }));\r\n    }\r\n    goUpAudio() {\r\n        Laya.SoundManager.playSound('音效/连续发牌.mp3', 1, Laya.Handler.create(this, function () { }));\r\n    }\r\n    clearAllClicks() {\r\n        for (let index = 0; index < this.cardParent._children.length; index++) {\r\n            const card = this.cardParent._children[index];\r\n            card['DigitalCard'].cardClicksOff();\r\n        }\r\n    }\r\n    createCard(type) {\r\n        let card = Laya.Pool.getItemByCreateFun('speakBox', this.digitalCard.create, this.digitalCard);\r\n        this.cardParent.addChild(card);\r\n        if (type === 'change') {\r\n            card['DigitalCard'].number.value = this.changeAnumber();\r\n        }\r\n        else {\r\n            card['DigitalCard'].number.value = this.indicateNum.value;\r\n        }\r\n        return card;\r\n    }\r\n    changeAnumber() {\r\n        let arr = [];\r\n        for (let i = 0; i < this.indicateNum.value.length; i++) {\r\n            arr.push(this.indicateNum.value[i]);\r\n        }\r\n        let random = Math.floor(Math.random() * (arr.length - 1));\r\n        let originalNum = arr[random];\r\n        let randomNum = Math.floor(Math.random() * 10).toString();\r\n        while (originalNum === randomNum) {\r\n            randomNum = Math.floor(Math.random() * 10).toString();\r\n        }\r\n        arr[random] = randomNum;\r\n        let numString;\r\n        for (let j = 0; j < arr.length; j++) {\r\n            if (j === 0) {\r\n                numString = arr[j];\r\n            }\r\n            else {\r\n                numString += arr[j];\r\n            }\r\n        }\r\n        return numString;\r\n    }\r\n    createGameOver() {\r\n        let gameOVer = Laya.Pool.getItemByCreateFun('gameOVer', this.gameOVer.create, this.gameOVer);\r\n        this.self.addChild(gameOVer);\r\n    }\r\n    createRanking() {\r\n        let ranking = Laya.Pool.getItemByCreateFun('ranking', this.ranking.create, this.ranking);\r\n        this.self.addChild(ranking);\r\n        if (Laya.Browser.onMiniGame) {\r\n            this.bannerAd.hide();\r\n        }\r\n    }\r\n    adaptiveOther(self) {\r\n        self.width = 750;\r\n        self.pivotX = self.width / 2;\r\n        self.pivotY = self.height / 2;\r\n        self.pos(375, Laya.stage.height / 2);\r\n    }\r\n    childAdaptive(child, parent, locationY) {\r\n        child.y = locationY - (Laya.stage.height / 2 - parent.height / 2);\r\n    }\r\n    wxPostInit() {\r\n        if (Laya.Browser.onMiniGame) {\r\n            Laya.loader.load([\"res/atlas/rank.atlas\"], Laya.Handler.create(null, function () {\r\n                Laya.MiniAdpter.sendAtlasToOpenDataContext(\"res/atlas/rank.atlas\");\r\n                let wx = Laya.Browser.window.wx;\r\n                let openDataContext = wx.getOpenDataContext();\r\n                openDataContext.postMessage({ action: 'init' });\r\n            }));\r\n        }\r\n    }\r\n    wxPostData() {\r\n        if (Laya.Browser.onMiniGame) {\r\n            let args = {\r\n                type: 'scores', data: { scores: this.levelsNum.value }\r\n            };\r\n            let wx = Laya.Browser.window.wx;\r\n            let openDataContext = wx.getOpenDataContext();\r\n            openDataContext.postMessage(args);\r\n            console.log('上传了');\r\n        }\r\n        else {\r\n            console.log('没有上传');\r\n        }\r\n    }\r\n    wxShare() {\r\n        if (Laya.Browser.onMiniGame) {\r\n            let wx = Laya.Browser.window.wx;\r\n            wx.shareAppMessage({\r\n                title: '数字找茬',\r\n                imageUrlId: 'CRYATpcgSFGkeB4Hs75jOQ',\r\n                imageUrl: 'https://mmocgame.qpic.cn/wechatgame/9zdKibmXJ3RsmFpXn6UAV4ScT8ulA4wzqUUNicKWDIaODZbuv38lkBBOBQv8XbxOI0/0'\r\n            });\r\n            console.log(\"主动进行了转发\");\r\n        }\r\n        else {\r\n            console.log(\"仅支持微信客户端\");\r\n        }\r\n    }\r\n    onUpdate() {\r\n        if (this.timerSwitch) {\r\n            this.timer++;\r\n            if (this.timer % 60 == 0 && this.timer > 0) {\r\n                let timeNum = this.timeNum.value;\r\n                let subNum;\r\n                if (timeNum.length === 3) {\r\n                    subNum = timeNum.substring(0, 2);\r\n                }\r\n                else if (timeNum.length === 2) {\r\n                    subNum = timeNum.substring(0, 1);\r\n                }\r\n                if (subNum === '0') {\r\n                    this.timerSwitch = false;\r\n                    this.clearAllCard_Over();\r\n                    return;\r\n                }\r\n                this.timeNum.value = (Number(subNum) - 1).toString() + 's';\r\n            }\r\n        }\r\n    }\r\n    onDisable() {\r\n    }\r\n}\r\n",
  "references": [
    "F:/Work/Game/SearchDigital/project/SearchDigital/src/Script/Template/Animation.ts"
  ]
}
