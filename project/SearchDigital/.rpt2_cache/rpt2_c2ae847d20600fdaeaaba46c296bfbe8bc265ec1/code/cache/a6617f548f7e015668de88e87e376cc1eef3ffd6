{
  "code": "export default class DigitalCard extends Laya.Script {\r\n    constructor() { super(); }\r\n    onEnable() {\r\n        this.self = this.owner;\r\n        this.self['DigitalCard'] = this;\r\n        this.gameControl = this.self.scene['Gamecontrol'];\r\n        this.cardParent = this.gameControl.cardParent;\r\n        this.levels = this.gameControl.levels;\r\n        this.number.alpha = 0;\r\n        this.self.alpha = 0;\r\n        let scale = 1 - (this.levels - 1) * 0.05;\r\n        this.number.scale(scale, scale);\r\n        this.cardClicksOn();\r\n    }\r\n    numAdaptiveBoard() {\r\n        this.setHeightAndY();\r\n        this.self.pivotY = this.self.height / 2;\r\n        this.board.x = this.self.pivotX;\r\n        this.board.y = this.self.pivotY;\r\n        this.number.x = this.board.x;\r\n        this.number.y = this.board.y * 1.1;\r\n        this.board.pivotX = this.board.width / 2;\r\n        this.board.pivotY = this.board.height / 2;\r\n        this.board.x = this.number.x;\r\n    }\r\n    setHeightAndY() {\r\n        switch (this.levels) {\r\n            case 1:\r\n                this.board.height = 200;\r\n                this.self.height = this.board.height;\r\n                this.self.y += this.cardParent.height / 3;\r\n                break;\r\n            case 2:\r\n                this.board.height = 200;\r\n                this.self.height = this.board.height;\r\n                this.self.y += this.cardParent.height / 3;\r\n                break;\r\n            case 3:\r\n                this.board.height = 150;\r\n                this.self.height = this.board.height;\r\n                this.self.y += this.cardParent.height / 3;\r\n                break;\r\n            case 4:\r\n                break;\r\n            case 5:\r\n                break;\r\n            default:\r\n                this.board.height = 135 - (this.levels - 1) * 6;\r\n                let scale = 1 - (this.levels - 1) * 0.05;\r\n                this.number.scale(scale, scale);\r\n                break;\r\n        }\r\n    }\r\n    cardwidth() {\r\n        let cardParent = this.gameControl.cardParent;\r\n        let parentW = cardParent.width;\r\n        let parentH = cardParent.height;\r\n    }\r\n    cardClicksOn() {\r\n        this.self.on(Laya.Event.MOUSE_DOWN, this, this.down);\r\n        this.self.on(Laya.Event.MOUSE_MOVE, this, this.move);\r\n        this.self.on(Laya.Event.MOUSE_UP, this, this.up);\r\n        this.self.on(Laya.Event.MOUSE_OUT, this, this.out);\r\n    }\r\n    cardClicksOnOff(node) {\r\n        node.off(Laya.Event.MOUSE_DOWN, this, this.down);\r\n        node.off(Laya.Event.MOUSE_MOVE, this, this.move);\r\n        node.off(Laya.Event.MOUSE_UP, this, this.up);\r\n        node.off(Laya.Event.MOUSE_OUT, this, this.out);\r\n    }\r\n    allCardClicksOff() {\r\n        let cardParent = this.gameControl.cardParent;\r\n        for (let i = 0; i < cardParent._children.length; i++) {\r\n            let card = cardParent._children[i];\r\n            this.cardClicksOnOff(card);\r\n        }\r\n    }\r\n    down(event) {\r\n        event.currentTarget.scale(1.1, 1.1);\r\n    }\r\n    cardVanish() {\r\n        Laya.Tween.to(this.self, { scaleX: 0, scaleY: 0, alpha: 0 }, 200, null, Laya.Handler.create(this, function () {\r\n            this.self.removeSelf();\r\n            this.gameControl.clearAllCard();\r\n        }));\r\n    }\r\n    move(event) {\r\n        event.currentTarget.scale(1, 1);\r\n    }\r\n    up(event) {\r\n        event.currentTarget.scale(1, 1);\r\n        let indicateNum = this.gameControl.indicateNum;\r\n        if (this.number.value === indicateNum.value) {\r\n            this.allCardClicksOff();\r\n            this.cardVanish();\r\n        }\r\n    }\r\n    out(event) {\r\n        event.currentTarget.scale(1, 1);\r\n    }\r\n    onDisable() {\r\n    }\r\n}\r\n",
  "references": [
    "F:/Work/Game/SearchDigital/project/SearchDigital/src/Script/GameControl.ts"
  ]
}
