var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var bigItem_1 = require("./view/bigItem");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("view/bigItem.ts", bigItem_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "test/Big.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./view/bigItem":5}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var BigRank_1 = require("./view/BigRank");
var Main = /** @class */ (function () {
    function Main() {
        //设置子域
        Laya.isWXOpenDataContext = true;
        Laya.isWXPosMsg = true;
        //根据IDE设置初始化引擎		
        Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, false);
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        Laya.stage.alignV = GameConfig_1.default.alignV;
        Laya.stage.alignH = GameConfig_1.default.alignH;
        // 关于透传接口，请参考: https://ldc2.layabox.com/doc/?nav=zh-ts-5-0-7
        if (Laya.Browser.onMiniGame)
            wx.onMessage(function (data) {
                console.log("子域收到消息： " + JSON.stringify(data));
                if (data.action == "init") { //第一次初始化接受数据监听
                    Laya.loader.load("res/atlas/rank.atlas", Laya.Handler.create(this, this.onComplete));
                }
                else if (data.action == "ranking") {
                    BigRank_1.default.instance.visible = true;
                    BigRank_1.default.instance.init();
                }
                else if (data.action == "close") {
                    BigRank_1.default.instance.visible = false;
                }
            }.bind(this));
        else
            Laya.loader.load("res/atlas/rank.atlas", Laya.Handler.create(this, this.onComplete));
    }
    Main.prototype.onComplete = function () {
        //初始化rank排行榜
        var rank = new BigRank_1.default();
        //初始化
        rank.init();
        console.log('进游戏就初始化子域接受数据');
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./view/BigRank":4}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var test;
    (function (test) {
        var BigUI = /** @class */ (function (_super) {
            __extends(BigUI, _super);
            function BigUI() {
                return _super.call(this) || this;
            }
            BigUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BigUI.uiView);
            };
            BigUI.uiView = { "type": "Scene", "props": { "x": 0, "width": 630, "height": 751 }, "compId": 2, "child": [{ "type": "List", "props": { "y": 0, "x": 4, "width": 619, "var": "_list", "vScrollBarSkin": " ", "spaceY": 5, "repeatX": 1, "height": 751, "elasticEnabled": true }, "compId": 3, "child": [{ "type": "bigItem", "props": { "runtime": "view/bigItem.ts", "renderType": "render" }, "compId": 5 }] }], "loadList": [], "loadList3D": [] };
            return BigUI;
        }(Laya.Scene));
        test.BigUI = BigUI;
        REG("ui.test.BigUI", BigUI);
        var BigItemUI = /** @class */ (function (_super) {
            __extends(BigItemUI, _super);
            function BigItemUI() {
                return _super.call(this) || this;
            }
            BigItemUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BigItemUI.uiView);
            };
            BigItemUI.uiView = { "type": "View", "props": { "width": 619, "height": 141 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "texture": "rank/排行栏.png" }, "compId": 36 }, { "type": "Sprite", "props": { "y": 77, "x": 171, "width": 93, "texture": "rank/头像框描边.png", "pivotY": 50, "pivotX": 50, "name": "contour", "height": 92 }, "compId": 37 }, { "type": "Image", "props": { "y": 32, "x": 127, "width": 80, "var": "img_head", "skin": "rank/头像.png", "name": "", "height": 80 }, "compId": 3, "child": [{ "type": "Sprite", "props": { "y": 0, "x": -1, "width": 82, "texture": "rank/头像框.png", "renderType": "mask", "height": 82 }, "compId": 26 }] }, { "type": "Label", "props": { "y": 83, "x": 291, "width": 131, "var": "text_name", "valign": "middle", "text": "老王哥", "strokeColor": "#642b1a", "stroke": 1, "pivotY": 19, "pivotX": 66, "overflow": "visible", "name": "", "height": 38, "fontSize": 27, "font": "Microsoft YaHei", "color": "#642b1a", "align": "left" }, "compId": 4 }, { "type": "FontClip", "props": { "y": 72, "x": 493, "width": 47, "var": "text_score", "value": "9", "spaceX": -15, "skin": "rank/0123456789.png", "sheet": "0123456789", "pivotY": 19, "pivotX": 24, "name": "", "height": 37, "align": "center" }, "compId": 17 }, { "type": "Sprite", "props": { "y": 14, "x": 6, "var": "rankNum", "name": "rankNum" }, "compId": 30, "child": [{ "type": "FontClip", "props": { "y": 64, "x": 54, "width": 70, "value": "45", "spaceX": -16, "skin": "rank/名次.png", "sheet": "0123456789", "pivotY": 23, "pivotX": 35, "name": "rankNum_Num", "height": 45, "align": "center" }, "compId": 31 }, { "type": "Image", "props": { "y": 22, "x": 16, "visible": false, "skin": "rank/NO1.png", "name": "rankNum_pic", "alpha": 0 }, "compId": 32 }] }, { "type": "Sprite", "props": { "y": 57.5, "x": 521, "texture": "rank/关.png", "name": "guan" }, "compId": 38 }], "loadList": ["rank/排行栏.png", "rank/头像框描边.png", "rank/头像.png", "rank/头像框.png", "rank/0123456789.png", "rank/名次.png", "rank/NO1.png", "rank/关.png"], "loadList3D": [] };
            return BigItemUI;
        }(Laya.View));
        test.BigItemUI = BigItemUI;
        REG("ui.test.BigItemUI", BigItemUI);
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var BigRank = /** @class */ (function (_super) {
    __extends(BigRank, _super);
    function BigRank() {
        var _this = _super.call(this) || this;
        /**获取好友排行榜时的key */
        //已经使用的_key有test10087，test10086
        _this._key = 'test10088';
        /**list初始化使用的数据 */
        _this.arr = [
            { index: 1, avatarIP: 'rank/头像.png', UserName: "老王哥", RankValue: 1 },
            { index: 2, avatarIP: 'rank/头像.png', UserName: "王哥", RankValue: 2 },
            { index: 3, avatarIP: 'rank/头像.png', UserName: "老王哥", RankValue: 3 },
            { index: 4, avatarIP: 'rank/头像.png', UserName: "狭路相逢", RankValue: 4 },
            { index: 5, avatarIP: 'rank/头像.png', UserName: "我们来做游戏", RankValue: 5 },
            { index: 6, avatarIP: 'rank/头像.png', UserName: "相逢何必曾相识", RankValue: 8 },
            { index: 7, avatarIP: 'rank/头像.png', UserName: "玩我游戏我很开心", RankValue: 10 },
            { index: 12, avatarIP: 'rank/头像.png', UserName: "玩我游戏我很开心", RankValue: 11 },
            { index: 11, avatarIP: 'rank/头像.png', UserName: "玩我游戏我很开心", RankValue: 12 }
        ];
        BigRank.instance = _this;
        return _this;
    }
    /**出场动画*/
    BigRank.prototype.appear = function () {
        console.log('出现动画开始播放！');
        Laya.stage.addChild(this);
        this.alpha = 0;
        Laya.Tween.to(this, { alpha: 1 }, 200, null, Laya.Handler.create(this, function () {
        }, []), 500);
    };
    /**
     * 初始化
     */
    BigRank.prototype.init = function () {
        this.appear();
        //初始化list数据
        this.setlist(this.arr);
        if (Laya.Browser.onMiniGame) {
            //接受来自主域的信息
            wx.onMessage(this.recevieData.bind(this));
            // 直接展示数据
            this.getFriendData();
        }
    };
    /**
     * 获取好友排行
     */
    BigRank.prototype.getFriendData = function () {
        var _$this = this;
        wx.getFriendCloudStorage({
            keyList: [this._key],
            success: function (res) {
                //关于拿到的数据详细情况可以产看微信文档
                //https://developers.weixin.qq.com/minigame/dev/api/UserGameData.html
                var listData;
                var obj;
                var kv;
                var arr = [];
                console.log('-----------------getFriendCloudStorage------------');
                if (res.data) {
                    for (var i = 0; i < res.data.length; i++) {
                        // res结构解析
                        /*
                        let res1: object = {
                            data: [
                                {
                                    obj1: {
                                        avatarIP: obj.avatarUrl,
                                        UserName: obj.nickname,
                                        openID: obj.openid,
                                        KVDataList: [
                                            {
                                                kvData: {
                                                    'key': this._key,
                                                    // data是我们上传的信息
                                                    'value': "'wxgame': {value1: 5000,update_time: Laya.Browser.now(),}}"
                                                }
                                            }
                                        ]
                                    }
                                },
                                { obj2: {} }, { obj3: {} }]
                        }
                        */
                        obj = res.data[i];
                        if (!(obj.KVDataList.length))
                            continue;
                        //拉取数据是，使用了多少个key- KVDataList的数组就有多少
                        //更详细的KVData可以查看微信文档:https://developers.weixin.qq.com/minigame/dev/api/KVData.html
                        //kv ="'wxgame': {value1: 5000,update_time: Laya.Browser.now(),}}"
                        kv = obj.KVDataList[0];
                        if (kv.key != _$this._key)
                            continue;
                        //kv.value ={'wxgame': {value1: 5000,update_time: Laya.Browser.now(),}}}
                        kv = JSON.parse(kv.value);
                        listData = {};
                        listData.avatarIP = obj.avatarUrl;
                        listData.UserName = obj.nickname;
                        listData.openID = obj.openid;
                        listData.RankValue = kv.wxgame.value1; //value1:5000
                        listData.update_time = kv.wxgame.update_time;
                        arr.push(listData);
                    }
                    //根据RankValue排序,字符串{value1: 5000}排序，省了一个步骤
                    arr = arr.sort(function (a, b) {
                        return b.RankValue - a.RankValue;
                    });
                    //增加一个用于查看的index排名
                    for (var i = 0; i < arr.length; i++) {
                        arr[i].index = i + 1;
                    }
                    //设置数组
                    _$this.setlist(arr);
                }
            },
            fail: function (data) {
                console.log('------------------获取托管数据失败--------------------');
                console.log(data);
            }
        });
    };
    /**
     * 接收信息
     * @param message 收到的主域传过来的信息
     */
    BigRank.prototype.recevieData = function (message) {
        var _$this = this;
        var type = message.type;
        switch (type) {
            case 'scores':
                //对比并且上传
                this.correlationData(message.data);
                break;
            default:
                break;
        }
    };
    /**对比上次的数据上传数据*/
    BigRank.prototype.correlationData = function (data) {
        // 上传所需格式
        var kvDataList = [];
        var obj = {};
        obj.wxgame = {};
        obj.wxgame.value1 = data['scores'];
        obj.wxgame.update_time = Laya.Browser.now();
        kvDataList.push({ "key": this._key, "value": JSON.stringify(obj) });
        // 先获取上次的得分
        wx.getUserCloudStorage({
            keyList: [this._key],
            success: function (getres) {
                console.log(getres);
                if (getres.KVDataList.length === 0) {
                    console.log('第一次上传无法获取值直接上传');
                    // 上传
                    wx.setUserCloudStorage({
                        KVDataList: kvDataList,
                        success: function (e) {
                            console.log('----第一次无论得了多少分都上传:' + JSON.stringify(e));
                        },
                        fail: function (e) {
                            console.log('-----fail:' + JSON.stringify(e));
                        },
                        complete: function (e) {
                            console.log('-----complete:' + JSON.stringify(e));
                        }
                    });
                }
                else {
                    console.log(getres);
                    console.log('不是第一次上传');
                    var kv = getres.KVDataList[0];
                    var kvData = JSON.parse(kv.value);
                    var lastValue1 = kvData.wxgame.value1;
                    console.log("上次的得分是:" + lastValue1);
                    console.log("这次的得分是:" + data['scores']);
                    if (Number(data['scores']) < Number(lastValue1)) {
                        console.log("这次的得分小于上的得分所以不上传!");
                        return;
                    }
                    // 上传
                    wx.setUserCloudStorage({
                        KVDataList: kvDataList,
                        success: function (e) {
                            console.log('----新的得分大于以前的所以上传了:' + JSON.stringify(e));
                        },
                        fail: function (e) {
                            console.log('-----fail:' + JSON.stringify(e));
                        },
                        complete: function (e) {
                            console.log('-----complete:' + JSON.stringify(e));
                        }
                    });
                }
            },
            fail: function (data) {
                console.log('------------------获取托管数据失败--------------------');
                console.log(data);
            }
        });
    };
    /**
     * 上报自己的数据
     * @param data 上报数据
     */
    BigRank.prototype.setSelfData = function (data) {
        // 上传所需格式
        var kvDataList = [];
        var obj = {};
        obj.wxgame = {};
        obj.wxgame.value1 = data['scores'];
        obj.wxgame.update_time = Laya.Browser.now();
        kvDataList.push({ "key": this._key, "value": JSON.stringify(obj) });
        // 上传
        wx.setUserCloudStorage({
            KVDataList: kvDataList,
            success: function (e) {
                console.log('----新的得分大于以前的所以上传了:' + JSON.stringify(e));
            },
            fail: function (e) {
                console.log('-----fail:' + JSON.stringify(e));
            },
            complete: function (e) {
                console.log('-----complete:' + JSON.stringify(e));
            }
        });
        // 最终obj和kvDataList的关系
        // 最终obj的结构
        /*
        obj = {
            'wxgame': {
                value1: 5000,
                update_time: Laya.Browser.now(),
            }
        }
        kvDataList = [
            {
                kvData: {
                    "key": this._key,
                    "value": "'wxgame': {value1: {data: {score: 5000},update_time: Laya.Browser.now(),}}"
                }
            },
            {
                kvData: {
                    "key": this._key,
                    "value": "'wxgame': {value1: {data: {score: 5000},update_time: Laya.Browser.now(),}}"
                }
            }
        ]
        */
    };
    /**上传前对比一下当前传入的分数和上次传入的分数对比，如果小于就不上传*/
    BigRank.prototype.sceorComparison = function (data) {
        wx.getUserCloudStorage({
            keyList: [this._key],
            success: function (getres) {
                var kv = getres.KVDataList[0];
                var kvData = JSON.parse(kv.value);
                var value1 = kvData.wxgame.value1;
                console.log("上次的得分是:" + value1);
                var score = data['scores'];
            },
            fail: function (data) {
                console.log('------------------获取托管数据失败--------------------');
                console.log(data);
            }
        });
    };
    /**
     * 设置list arr
     * @param arr 赋值用的arr
     */
    BigRank.prototype.setlist = function (arr) {
        this._list.array = arr;
        this._list.refresh();
    };
    BigRank.instance = null;
    return BigRank;
}(layaMaxUI_1.ui.test.BigUI));
exports.default = BigRank;
},{"../ui/layaMaxUI":3}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var BigItem = /** @class */ (function (_super) {
    __extends(BigItem, _super);
    function BigItem() {
        return _super.call(this) || this;
    }
    Object.defineProperty(BigItem.prototype, "dataSource", {
        set: function (value) {
            if (!value)
                return;
            // 名次
            this.rankNum = this.getChildByName('rankNum');
            var rankNum_Num = this.rankNum.getChildByName('rankNum_Num');
            // let rankNum_pic = this.rankNum.getChildByName('rankNum_pic') as Laya.Image;
            // switch (value.index) {
            //     case 1:
            //         rankNum_Num.value = ' ';
            //         rankNum_pic.skin = 'rank/NO1.png';
            //         break;
            //     case 2:
            //         rankNum_Num.value = ' ';
            //         rankNum_pic.skin = 'rank/NO2.png';
            //         break;
            //     case 3:
            //         rankNum_Num.value = ' ';
            //         rankNum_pic.skin = 'rank/NO3.png';
            //         break;
            //     default:
            //         rankNum_Num.value = value.index;
            //         rankNum_pic.visible = false;
            //         break;
            // }
            rankNum_Num.value = value.index;
            // 头像
            this.img_head.skin = value.avatarIP;
            // 名字格式设置
            this.text_name.text = value.UserName;
            // this.text_name.pivotX = this.text_name.width / 2;
            // this.text_name.pivotY = this.text_name.height / 2;
            // let len1 = value.UserName.length;
            // switch (len1) {
            //     case 5:
            //         this.text_name.fontSize = 27;
            //         this.text_name.y = 53;
            //         break;
            //     case 6:
            //         this.text_name.fontSize = 25;
            //         this.text_name.y = 54;
            //         break;
            //     case 7:
            //         this.text_name.fontSize = 23;
            //         this.text_name.y = 55;
            //         break;
            //     case 8:
            //         this.text_name.fontSize = 21;
            //         this.text_name.y = 56;
            //         break;
            //     default:
            //         this.text_name.fontSize = 29;
            //         this.text_name.y = 51;
            //         break;
            // }
            // 分数格式
            // this.text_score.align = 'center';
            // this.text_score.y = 57;
            this.text_score.value = value.RankValue;
            var guan = this.getChildByName('guan');
            // 两位数以上的时候，“关”往后移动一些
            if (value.RankValue >= 10) {
                guan.x = 550;
            }
            else {
                guan.x = 530;
            }
            // this.text_score.pivotX = this.text_score.width / 2;
            // this.text_score.pivotY = this.text_score.height / 2;
            // let len2 = this.text_score.value.length;
            // switch (len1) {
            //     case 5:
            //         this.text_score.scale(0.93, 0.93);
            //         this.text_score.y = 59;
            //         break;
            //     case 6:
            //         this.text_score.scale(0.86, 0.86);
            //         this.text_score.y = 60;
            //         break;
            //     case 7:
            //         this.text_score.scale(0.79, 0.79);
            //         this.text_score.y = 61;
            //         this.text_score.x += 1
            //         break;
            //     case 8:
            //         this.text_score.scale(0.72, 0.72);
            //         this.text_score.y = 62;
            //         this.text_score.x += 2;
            //         break;
            //     default:
            //         this.text_score.y = 58;
            //         break;
            // }
        },
        enumerable: true,
        configurable: true
    });
    return BigItem;
}(layaMaxUI_1.ui.test.BigItemUI));
exports.default = BigItem;
},{"../ui/layaMaxUI":3}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
